@*
    DirSFTP
    Copyright (C) 2023  Raphael Beck

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@inject IConfigStorage ConfigStorage
@inject NavigationManager NavigationManager

@page "/add-new-connection"

@using GlitchedPolygons.DirSFTP.Services.Config
@using GlitchedPolygons.DirSFTP.Models

<PageTitle>DirSFTP - Add new connection</PageTitle>

<h1>
    Add new SFTP connection
</h1>

<br />

<h2>
    Save a new set of SFTP connection details by compiling the form below.
</h2>

<br />

<p>
    Make sure to double-check all the fields against typos!
</p>

<br />


<div class="form-group mt-2">

    <label class="form-label">
        Host
    </label>

    <input type="text"
           class="form-control"
           placeholder="sftp.example.com"
           @bind="host" />

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Port
    </label>

    <input type="number"
           class="form-control"
           placeholder="Default port for SSH is 22"
           @bind="port" />

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Username
    </label>

    <input type="text"
           class="form-control"
           placeholder="gordon"
           @bind="username" />

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Password
    </label>

    <input type="password"
           class="form-control"
           placeholder="gaben"
           @bind="password" />

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Private key
    </label>

    <textarea @bind="privateKey" rows="7" class="form-control" placeholder="@privateKeyTooltip.TrimStart()" style="min-height: 64px; max-height: 512px;"></textarea>

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Private key passphrase
    </label>

    <input type="password"
           class="form-control"
           @bind="privateKeyPassphrase" />

</div>

<div class="form-group mt-2">

    <label class="form-label">
        Default remote directory
    </label>

    <input class="form-control"
           @bind="remoteDirectory" />
</div>

<div class="form-group mt-4">
    <button class="btn btn-secondary"
            @onclick="OnClickCancel">
        Cancel
    </button>

    <button class="btn btn-primary"
            @onclick="OnClickSave">
        Save
    </button>
</div>

@code
{
    private string host;
    private int port = 22;
    private string username;
    private string password;
    private string privateKey;
    private string privateKeyPassphrase;
    private string remoteDirectory;

        private const string privateKeyTooltip = @"

PEM-formatted private key. The following key types are supported:

    - RSA in OpenSSL PEM and ssh.com format
    - DSA in OpenSSL PEM and ssh.com format
    - ECDSA 256/384/521 in OpenSSL PEM format
    - ECDSA 256/384/521 in OpenSSH key format
    - Ed25519 and RSA in OpenSSH key format

Private keys can be encrypted using one of the following cipher methods:

    - DES-EDE3-CBC
    - DES-EDE3-CFB
    - DES-CBC
    - AES-128-CBC
    - AES-192-CBC
    - AES-256-CBC
";

    protected override async Task OnInitializedAsync()
    {
    }

    private void OnClickCancel()
    {
        NavigationManager.NavigateTo("/");
    }

    private void OnClickSave()
    {
    // TODO: save conn details to SecureStorage here

        NavigationManager.NavigateTo("/");
    }
}