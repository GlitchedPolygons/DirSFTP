@*
    DirSFTP
    Copyright (C) 2023  Raphael Beck

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@inject IConfigStorage ConfigStorage
@inject IFingerprintService FingerprintService
@inject NavigationManager NavigationManager

@page "/"

@using GlitchedPolygons.DirSFTP.Services.Config
@using GlitchedPolygons.DirSFTP.Models
@using GlitchedPolygons.DirSFTP.Services.HostKey

<PageTitle>DirSFTP</PageTitle>

<h1>
    Home
</h1>

<br />

<h2>
    Welcome to DirSFTP!
</h2>

<br />

@if (sftpConfigs is not null)
{
    @foreach (SftpConfig sftpConfig in sftpConfigs)
    {
        <button @onclick="() => OnClickConnect(sftpConfig)">
            @sftpConfig.Username@@@sftpConfig.Host
        </button>
    }
}

<button @onclick="OnClickAddNewConnection">
    Add new connection
</button>

@code
{
    private IEnumerable<SftpConfig> sftpConfigs = null;

    protected override async Task OnInitializedAsync()
    {
        sftpConfigs = await ConfigStorage.GetAll();
    }

    private async Task OnClickConnect(SftpConfig config)
    {
        bool trustedHostKey = await FingerprintService.CheckFingerprint(config.Host, config.Port);

        if (trustedHostKey)
        {
            // TODO: connect
        }
        else
        {
            // TODO: show alert to user in lower right corner, e.g. "Cancelled..."
        }
    }

    private void OnClickAddNewConnection()
    {
        NavigationManager.NavigateTo("/add-new-connection");
    }
}