@*
    DirSFTP
    Copyright (C) 2023  Raphael Beck

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@inject NavigationManager NavigationManager
@inject IUploadLockService UploadLock

@using GlitchedPolygons.ExtensionMethods;
@using GlitchedPolygons.DirSFTP.Services.Lock

<div class="top-row ps-3 navbar navbar-dark">

    <div class="container-fluid">

        <a class="navbar-brand"
           href="">
            DirSFTP
        </a>

        <button title="Navigation menu"
                class="navbar-toggler"
                @onclick="ToggleNavMenu">

            <span class="navbar-toggler-icon">
            </span>

        </button>
    </div>

</div>

<div class="@NavMenuCssClass"
     @onclick="ToggleNavMenu">

    <nav class="flex-column">

        @if (UploadLock.IsLocked)
        {
            <p style="margin: 32px">Upload in progress, please stand by...</p>
        }
        else 
        {
            <div class="nav-item px-3">

                <NavLink class="nav-link"
                     href=""
                     Match="NavLinkMatch.All">

                    <span class="oi oi-home"
                      aria-hidden="true">
                    </span> Home

                </NavLink>

            </div>

            <div class="nav-item px-3">

                <NavLink class="nav-link"
                     href="browse">

                    <span class="oi oi-list-rich"
                      aria-hidden="true">
                    </span> Browse

                </NavLink>

            </div>

            <div class="nav-item px-3">

                <NavLink class="nav-link"
                     href="fingerprints">

                    <span class="oi oi-key"
                      aria-hidden="true">
                    </span> Fingerprints

                </NavLink>

            </div>

            <div class="nav-item px-3">

                <NavLink class="nav-link"
                     href="javascript:void(0)"
                     @onclick="ToggleTheme">

                    <span class="oi @(darkTheme ? "oi-sun" : "oi-moon")"
                      aria-hidden="true">
                    </span> @(darkTheme ? "Light theme" : "Dark theme")

                </NavLink>

            </div>
        }

    </nav>

</div>

@code
{
    private bool darkTheme = true;

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        string darkThemePreference = await SecureStorage.GetAsync(Constants.PreferenceIds.DARK_THEME);

        darkTheme = darkThemePreference.NullOrEmpty() || darkThemePreference.ToLowerInvariant() == "true";

        UploadLock.ChangedLockState += OnChangedUploadLockState;

        OnChangedUploadLockState(UploadLock.IsLocked);
    }

    private void OnChangedUploadLockState(bool nowLocked)
    {
        InvokeAsync(StateHasChanged);
    }

    private async Task ToggleTheme()
    {
        darkTheme = !darkTheme;

        await SecureStorage.SetAsync(Constants.PreferenceIds.DARK_THEME, darkTheme.ToString());

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}